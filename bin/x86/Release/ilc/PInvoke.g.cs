#define MCG_WINRT_SUPPORTED
using Mcg.System;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.WindowsRuntime;
using global::Windows.Foundation;
using global::Windows.Foundation.Collections;


// -----------------------------------------------------------------------------------------------------------
// 
// WARNING: THIS SOURCE FILE IS FOR 32-BIT BUILDS ONLY!
// 
// MCG GENERATED CODE
// 
// This C# source file is generated by MCG and is added into the application at compile time to support interop features.
// 
// It has three primary components:
// 
// 1. Public type definitions with interop implementation used by this application including WinRT & COM data structures and P/Invokes.
// 
// 2. The '__Interop' class containing marshaling code that acts as a bridge from managed code to native code.
// 
// 3. The 'McgNative' class containing marshaling code and native type definitions that call into native code and are called by native code.
// 
// -----------------------------------------------------------------------------------------------------------
// 
// warning CS0067: The event 'event' is never used
#pragma warning disable 67
// warning CS0169: The field 'field' is never used
#pragma warning disable 169
// warning CS0649: Field 'field' is never assigned to, and will always have its default value 0
#pragma warning disable 414
// warning CS0414: The private field 'field' is assigned but its value is never used
#pragma warning disable 649
// warning CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// warning CS0108 'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.
#pragma warning disable 108
// warning CS0114 'member1' hides inherited member 'member2'.  To make the current method override that implementation, add the override keyword. Otherwise add the new keyword.
#pragma warning disable 114
// warning CS0659 'type' overrides Object.Equals but does not override GetHashCode.
#pragma warning disable 659
// warning CS0465 Introducing a 'Finalize' method can interfere with destructor invocation. Did you intend to declare a destructor?
#pragma warning disable 465
// warning CS0028 'function declaration' has the wrong signature to be an entry point
#pragma warning disable 28
// warning CS0162 Unreachable code Detected
#pragma warning disable 162
// warning CS0628 new protected member declared in sealed class
#pragma warning disable 628

namespace __Interop
{
	/// <summary>
	/// P/Invoke class for module 'e_sqlite3'
	/// </summary>
	public unsafe static partial class e_sqlite3
	{
		// Signature, sqlite3_close, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_close")]
		public static int sqlite3_close(global::System.IntPtr db)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_close(db);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_close_v2, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_close_v2")]
		public static int sqlite3_close_v2(global::System.IntPtr db)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_close_v2(db);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_enable_shared_cache, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_enable_shared_cache")]
		public static int sqlite3_enable_shared_cache(int enable)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_enable_shared_cache(enable);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_interrupt, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_interrupt")]
		public static void sqlite3_interrupt(global::System.IntPtr db)
		{
			// Marshalling
			// Call to native method
			global::__Interop.e_sqlite3_PInvokes.sqlite3_interrupt(db);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sqlite3_finalize, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_finalize")]
		public static int sqlite3_finalize(global::System.IntPtr stmt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_finalize(stmt);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_reset, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_reset")]
		public static int sqlite3_reset(global::System.IntPtr stmt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_reset(stmt);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_clear_bindings, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_clear_bindings")]
		public static int sqlite3_clear_bindings(global::System.IntPtr stmt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_clear_bindings(stmt);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_stmt_status, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_stmt_status")]
		public static int sqlite3_stmt_status(
					global::System.IntPtr stm, 
					int op, 
					int resetFlg)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_stmt_status(
								stm, 
								op, 
								resetFlg
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_parameter_name, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_bind_parameter_name")]
		public static global::System.IntPtr sqlite3_bind_parameter_name(
					global::System.IntPtr stmt, 
					int index)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_bind_parameter_name(
								stmt, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_database_name, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_column_database_name")]
		public static global::System.IntPtr sqlite3_column_database_name(
					global::System.IntPtr stmt, 
					int index)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_column_database_name(
								stmt, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_database_name16, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_column_database_name16")]
		public static global::System.IntPtr sqlite3_column_database_name16(
					global::System.IntPtr stmt, 
					int index)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_column_database_name16(
								stmt, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_decltype, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_column_decltype")]
		public static global::System.IntPtr sqlite3_column_decltype(
					global::System.IntPtr stmt, 
					int index)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_column_decltype(
								stmt, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_decltype16, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_column_decltype16")]
		public static global::System.IntPtr sqlite3_column_decltype16(
					global::System.IntPtr stmt, 
					int index)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_column_decltype16(
								stmt, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_name, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_column_name")]
		public static global::System.IntPtr sqlite3_column_name(
					global::System.IntPtr stmt, 
					int index)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_column_name(
								stmt, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_name16, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_column_name16")]
		public static global::System.IntPtr sqlite3_column_name16(
					global::System.IntPtr stmt, 
					int index)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_column_name16(
								stmt, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_origin_name, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_column_origin_name")]
		public static global::System.IntPtr sqlite3_column_origin_name(
					global::System.IntPtr stmt, 
					int index)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_column_origin_name(
								stmt, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_origin_name16, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_column_origin_name16")]
		public static global::System.IntPtr sqlite3_column_origin_name16(
					global::System.IntPtr stmt, 
					int index)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_column_origin_name16(
								stmt, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_table_name, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_column_table_name")]
		public static global::System.IntPtr sqlite3_column_table_name(
					global::System.IntPtr stmt, 
					int index)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_column_table_name(
								stmt, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_table_name16, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_column_table_name16")]
		public static global::System.IntPtr sqlite3_column_table_name16(
					global::System.IntPtr stmt, 
					int index)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_column_table_name16(
								stmt, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_text, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_column_text")]
		public static global::System.IntPtr sqlite3_column_text(
					global::System.IntPtr stmt, 
					int index)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_column_text(
								stmt, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_text16, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_column_text16")]
		public static global::System.IntPtr sqlite3_column_text16(
					global::System.IntPtr stmt, 
					int index)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_column_text16(
								stmt, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_errmsg, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_errmsg")]
		public static global::System.IntPtr sqlite3_errmsg(global::System.IntPtr db)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_errmsg(db);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_db_readonly, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_db_readonly")]
		public static int sqlite3_db_readonly(
					global::System.IntPtr db, 
					byte[] dbName)
		{
			// Setup
			byte* unsafe_dbName;
			int unsafe___value;
			// Marshalling
			fixed (byte* pinned_dbName = ((dbName != null 
						&& dbName.Length == 0) ? new byte[1] : dbName))
			{
				unsafe_dbName = (byte*)pinned_dbName;
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_db_readonly(
									db, 
									unsafe_dbName
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_db_filename, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_db_filename")]
		public static global::System.IntPtr sqlite3_db_filename(
					global::System.IntPtr db, 
					byte[] att)
		{
			// Setup
			byte* unsafe_att;
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (byte* pinned_att = ((att != null 
						&& att.Length == 0) ? new byte[1] : att))
			{
				unsafe_att = (byte*)pinned_att;
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_db_filename(
									db, 
									unsafe_att
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_prepare, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_prepare")]
		public static int sqlite3_prepare(
					global::System.IntPtr db, 
					global::System.IntPtr pSql, 
					int nBytes, 
					out global::System.IntPtr stmt, 
					out global::System.IntPtr ptrRemain)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::System.IntPtr* pinned_stmt = &(stmt))
				fixed (global::System.IntPtr* pinned_ptrRemain = &(ptrRemain))
				{
					// Call to native method
					unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_prepare(
										db, 
										pSql, 
										nBytes, 
										pinned_stmt, 
										pinned_ptrRemain
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_prepare_v2, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_prepare_v2")]
		public static int sqlite3_prepare_v2(
					global::System.IntPtr db, 
					global::System.IntPtr pSql, 
					int nBytes, 
					out global::System.IntPtr stmt, 
					out global::System.IntPtr ptrRemain)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::System.IntPtr* pinned_stmt = &(stmt))
				fixed (global::System.IntPtr* pinned_ptrRemain = &(ptrRemain))
				{
					// Call to native method
					unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_prepare_v2(
										db, 
										pSql, 
										nBytes, 
										pinned_stmt, 
										pinned_ptrRemain
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_db_status, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_db_status")]
		public static int sqlite3_db_status(
					global::System.IntPtr db, 
					int op, 
					out int current, 
					out int highest, 
					int resetFlg)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (int* pinned_current = &(current))
				fixed (int* pinned_highest = &(highest))
				{
					// Call to native method
					unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_db_status(
										db, 
										op, 
										pinned_current, 
										pinned_highest, 
										resetFlg
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_complete, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_complete")]
		public static int sqlite3_complete(byte[] pSql)
		{
			// Setup
			byte* unsafe_pSql;
			int unsafe___value;
			// Marshalling
			fixed (byte* pinned_pSql = ((pSql != null 
						&& pSql.Length == 0) ? new byte[1] : pSql))
			{
				unsafe_pSql = (byte*)pinned_pSql;
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_complete(unsafe_pSql);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_compileoption_used, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_compileoption_used")]
		public static int sqlite3_compileoption_used(byte[] pSql)
		{
			// Setup
			byte* unsafe_pSql;
			int unsafe___value;
			// Marshalling
			fixed (byte* pinned_pSql = ((pSql != null 
						&& pSql.Length == 0) ? new byte[1] : pSql))
			{
				unsafe_pSql = (byte*)pinned_pSql;
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_compileoption_used(unsafe_pSql);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_compileoption_get, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_compileoption_get")]
		public static global::System.IntPtr sqlite3_compileoption_get(int n)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_compileoption_get(n);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_table_column_metadata, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_table_column_metadata")]
		public static int sqlite3_table_column_metadata(
					global::System.IntPtr db, 
					byte[] dbName, 
					byte[] tblName, 
					byte[] colName, 
					out global::System.IntPtr ptrDataType, 
					out global::System.IntPtr ptrCollSeq, 
					out int notNull, 
					out int primaryKey, 
					out int autoInc)
		{
			// Setup
			byte* unsafe_dbName;
			byte* unsafe_tblName;
			byte* unsafe_colName;
			int unsafe___value;
			// Marshalling
			fixed (byte* pinned_dbName = ((dbName != null 
						&& dbName.Length == 0) ? new byte[1] : dbName))
			{
				unsafe_dbName = (byte*)pinned_dbName;
				fixed (byte* pinned_tblName = ((tblName != null 
							&& tblName.Length == 0) ? new byte[1] : tblName))
				{
					unsafe_tblName = (byte*)pinned_tblName;
					fixed (byte* pinned_colName = ((colName != null 
								&& colName.Length == 0) ? new byte[1] : colName))
					{
						unsafe_colName = (byte*)pinned_colName;
						fixed (global::System.IntPtr* pinned_ptrDataType = &(ptrDataType))
							fixed (global::System.IntPtr* pinned_ptrCollSeq = &(ptrCollSeq))
								fixed (int* pinned_notNull = &(notNull))
									fixed (int* pinned_primaryKey = &(primaryKey))
										fixed (int* pinned_autoInc = &(autoInc))
										{
											// Call to native method
											unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_table_column_metadata(
																db, 
																unsafe_dbName, 
																unsafe_tblName, 
																unsafe_colName, 
																pinned_ptrDataType, 
																pinned_ptrCollSeq, 
																pinned_notNull, 
																pinned_primaryKey, 
																pinned_autoInc
															);
											global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
										}
					}
				}
			}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_value_text, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_value_text")]
		public static global::System.IntPtr sqlite3_value_text(global::System.IntPtr p)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_value_text(p);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_value_text16, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_value_text16")]
		public static global::System.IntPtr sqlite3_value_text16(global::System.IntPtr p)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_value_text16(p);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_enable_load_extension, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_enable_load_extension")]
		public static int sqlite3_enable_load_extension(
					global::System.IntPtr db, 
					int enable)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_enable_load_extension(
								db, 
								enable
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_load_extension, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [in] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_load_extension")]
		public static int sqlite3_load_extension(
					global::System.IntPtr db, 
					byte[] fileName, 
					byte[] procName, 
					ref global::System.IntPtr pError)
		{
			// Setup
			byte* unsafe_fileName;
			byte* unsafe_procName;
			int unsafe___value;
			// Marshalling
			fixed (byte* pinned_fileName = ((fileName != null 
						&& fileName.Length == 0) ? new byte[1] : fileName))
			{
				unsafe_fileName = (byte*)pinned_fileName;
				fixed (byte* pinned_procName = ((procName != null 
							&& procName.Length == 0) ? new byte[1] : procName))
				{
					unsafe_procName = (byte*)pinned_procName;
					fixed (global::System.IntPtr* pinned_pError = &(pError))
					{
						// Call to native method
						unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_load_extension(
											db, 
											unsafe_fileName, 
											unsafe_procName, 
											pinned_pError
										);
						global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					}
				}
			}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_initialize, [fwd] [return] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_initialize")]
		public static int sqlite3_initialize()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_initialize();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_shutdown, [fwd] [return] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_shutdown")]
		public static int sqlite3_shutdown()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_shutdown();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_libversion, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_libversion")]
		public static global::System.IntPtr sqlite3_libversion()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_libversion();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_libversion_number, [fwd] [return] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_libversion_number")]
		public static int sqlite3_libversion_number()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_libversion_number();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_threadsafe, [fwd] [return] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_threadsafe")]
		public static int sqlite3_threadsafe()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_threadsafe();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_sourceid, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_sourceid")]
		public static global::System.IntPtr sqlite3_sourceid()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_sourceid();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_malloc, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_malloc")]
		public static global::System.IntPtr sqlite3_malloc(int n)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_malloc(n);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_realloc, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_realloc")]
		public static global::System.IntPtr sqlite3_realloc(
					global::System.IntPtr p, 
					int n)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_realloc(
								p, 
								n
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_free, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_free")]
		public static void sqlite3_free(global::System.IntPtr p)
		{
			// Marshalling
			// Call to native method
			global::__Interop.e_sqlite3_PInvokes.sqlite3_free(p);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sqlite3_open, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_open")]
		public static int sqlite3_open(
					byte[] filename, 
					out global::System.IntPtr db)
		{
			// Setup
			byte* unsafe_filename;
			int unsafe___value;
			// Marshalling
			fixed (byte* pinned_filename = ((filename != null 
						&& filename.Length == 0) ? new byte[1] : filename))
			{
				unsafe_filename = (byte*)pinned_filename;
				fixed (global::System.IntPtr* pinned_db = &(db))
				{
					// Call to native method
					unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_open(
										unsafe_filename, 
										pinned_db
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_open_v2, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_open_v2")]
		public static int sqlite3_open_v2(
					byte[] filename, 
					out global::System.IntPtr db, 
					int flags, 
					byte[] vfs)
		{
			// Setup
			byte* unsafe_filename;
			byte* unsafe_vfs;
			int unsafe___value;
			// Marshalling
			fixed (byte* pinned_filename = ((filename != null 
						&& filename.Length == 0) ? new byte[1] : filename))
			{
				unsafe_filename = (byte*)pinned_filename;
				fixed (global::System.IntPtr* pinned_db = &(db))
					fixed (byte* pinned_vfs = ((vfs != null 
								&& vfs.Length == 0) ? new byte[1] : vfs))
					{
						unsafe_vfs = (byte*)pinned_vfs;
						// Call to native method
						unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_open_v2(
											unsafe_filename, 
											pinned_db, 
											flags, 
											unsafe_vfs
										);
						global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					}
			}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_vfs_find, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_vfs_find")]
		public static global::System.IntPtr sqlite3_vfs_find(byte[] vfs)
		{
			// Setup
			byte* unsafe_vfs;
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (byte* pinned_vfs = ((vfs != null 
						&& vfs.Length == 0) ? new byte[1] : vfs))
			{
				unsafe_vfs = (byte*)pinned_vfs;
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_vfs_find(unsafe_vfs);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_open16, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040DF0] string__wchar_t *, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_open16")]
		public static int sqlite3_open16(
					string fileName, 
					out global::System.IntPtr db)
		{
			// Setup
			ushort* unsafe_fileName = default(ushort*);
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_fileName = fileName)
			{
				unsafe_fileName = (ushort*)pinned_fileName;
				fixed (global::System.IntPtr* pinned_db = &(db))
				{
					// Call to native method
					unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_open16(
										unsafe_fileName, 
										pinned_db
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_last_insert_rowid, [fwd] [return] [EETypeRva:0x00040C5C] long____int64, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_last_insert_rowid")]
		public static long sqlite3_last_insert_rowid(global::System.IntPtr db)
		{
			// Setup
			long unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_last_insert_rowid(db);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_changes, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_changes")]
		public static int sqlite3_changes(global::System.IntPtr db)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_changes(db);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_total_changes, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_total_changes")]
		public static int sqlite3_total_changes(global::System.IntPtr db)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_total_changes(db);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_memory_used, [fwd] [return] [EETypeRva:0x00040C5C] long____int64, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_memory_used")]
		public static long sqlite3_memory_used()
		{
			// Setup
			long unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_memory_used();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_memory_highwater, [fwd] [return] [EETypeRva:0x00040C5C] long____int64, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_memory_highwater")]
		public static long sqlite3_memory_highwater(int resetFlag)
		{
			// Setup
			long unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_memory_highwater(resetFlag);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_status, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_status")]
		public static int sqlite3_status(
					int op, 
					out int current, 
					out int highwater, 
					int resetFlag)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (int* pinned_current = &(current))
				fixed (int* pinned_highwater = &(highwater))
				{
					// Call to native method
					unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_status(
										op, 
										pinned_current, 
										pinned_highwater, 
										resetFlag
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_busy_timeout, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_busy_timeout")]
		public static int sqlite3_busy_timeout(
					global::System.IntPtr db, 
					int ms)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_busy_timeout(
								db, 
								ms
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_blob, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_bind_blob")]
		public static int sqlite3_bind_blob(
					global::System.IntPtr stmt, 
					int index, 
					byte[] val, 
					int nSize, 
					global::System.IntPtr nTransient)
		{
			// Setup
			byte* unsafe_val;
			int unsafe___value;
			// Marshalling
			fixed (byte* pinned_val = ((val != null 
						&& val.Length == 0) ? new byte[1] : val))
			{
				unsafe_val = (byte*)pinned_val;
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_bind_blob(
									stmt, 
									index, 
									unsafe_val, 
									nSize, 
									nTransient
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_zeroblob, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_bind_zeroblob")]
		public static int sqlite3_bind_zeroblob(
					global::System.IntPtr stmt, 
					int index, 
					int size)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_bind_zeroblob(
								stmt, 
								index, 
								size
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_double, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] double__double, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_bind_double")]
		public static int sqlite3_bind_double(
					global::System.IntPtr stmt, 
					int index, 
					double val)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_bind_double(
								stmt, 
								index, 
								val
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_int, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_bind_int")]
		public static int sqlite3_bind_int(
					global::System.IntPtr stmt, 
					int index, 
					int val)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_bind_int(
								stmt, 
								index, 
								val
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_int64, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] long____int64, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_bind_int64")]
		public static int sqlite3_bind_int64(
					global::System.IntPtr stmt, 
					int index, 
					long val)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_bind_int64(
								stmt, 
								index, 
								val
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_null, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_bind_null")]
		public static int sqlite3_bind_null(
					global::System.IntPtr stmt, 
					int index)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_bind_null(
								stmt, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_text, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_bind_text")]
		public static int sqlite3_bind_text(
					global::System.IntPtr stmt, 
					int index, 
					byte[] val, 
					int nlen, 
					global::System.IntPtr pvReserved)
		{
			// Setup
			byte* unsafe_val;
			int unsafe___value;
			// Marshalling
			fixed (byte* pinned_val = ((val != null 
						&& val.Length == 0) ? new byte[1] : val))
			{
				unsafe_val = (byte*)pinned_val;
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_bind_text(
									stmt, 
									index, 
									unsafe_val, 
									nlen, 
									pvReserved
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_parameter_count, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_bind_parameter_count")]
		public static int sqlite3_bind_parameter_count(global::System.IntPtr stmt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_bind_parameter_count(stmt);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_parameter_index, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_bind_parameter_index")]
		public static int sqlite3_bind_parameter_index(
					global::System.IntPtr stmt, 
					byte[] strName)
		{
			// Setup
			byte* unsafe_strName;
			int unsafe___value;
			// Marshalling
			fixed (byte* pinned_strName = ((strName != null 
						&& strName.Length == 0) ? new byte[1] : strName))
			{
				unsafe_strName = (byte*)pinned_strName;
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_bind_parameter_index(
									stmt, 
									unsafe_strName
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_count, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_column_count")]
		public static int sqlite3_column_count(global::System.IntPtr stmt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_column_count(stmt);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_data_count, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_data_count")]
		public static int sqlite3_data_count(global::System.IntPtr stmt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_data_count(stmt);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_step, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_step")]
		public static int sqlite3_step(global::System.IntPtr stmt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_step(stmt);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_sql, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_sql")]
		public static global::System.IntPtr sqlite3_sql(global::System.IntPtr stmt)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_sql(stmt);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_double, [fwd] [return] [EETypeRva:0x00040C5C] double__double, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_column_double")]
		public static double sqlite3_column_double(
					global::System.IntPtr stmt, 
					int index)
		{
			// Setup
			double unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_column_double(
								stmt, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_int, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_column_int")]
		public static int sqlite3_column_int(
					global::System.IntPtr stmt, 
					int index)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_column_int(
								stmt, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_int64, [fwd] [return] [EETypeRva:0x00040C5C] long____int64, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_column_int64")]
		public static long sqlite3_column_int64(
					global::System.IntPtr stmt, 
					int index)
		{
			// Setup
			long unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_column_int64(
								stmt, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_blob, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_column_blob")]
		public static global::System.IntPtr sqlite3_column_blob(
					global::System.IntPtr stmt, 
					int index)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_column_blob(
								stmt, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_bytes, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_column_bytes")]
		public static int sqlite3_column_bytes(
					global::System.IntPtr stmt, 
					int index)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_column_bytes(
								stmt, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_type, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_column_type")]
		public static int sqlite3_column_type(
					global::System.IntPtr stmt, 
					int index)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_column_type(
								stmt, 
								index
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_aggregate_count, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_aggregate_count")]
		public static int sqlite3_aggregate_count(global::System.IntPtr context)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_aggregate_count(context);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_value_blob, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_value_blob")]
		public static global::System.IntPtr sqlite3_value_blob(global::System.IntPtr p)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_value_blob(p);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_value_bytes, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_value_bytes")]
		public static int sqlite3_value_bytes(global::System.IntPtr p)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_value_bytes(p);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_value_double, [fwd] [return] [EETypeRva:0x00040C5C] double__double, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_value_double")]
		public static double sqlite3_value_double(global::System.IntPtr p)
		{
			// Setup
			double unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_value_double(p);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_value_int, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_value_int")]
		public static int sqlite3_value_int(global::System.IntPtr p)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_value_int(p);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_value_int64, [fwd] [return] [EETypeRva:0x00040C5C] long____int64, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_value_int64")]
		public static long sqlite3_value_int64(global::System.IntPtr p)
		{
			// Setup
			long unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_value_int64(p);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_value_type, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_value_type")]
		public static int sqlite3_value_type(global::System.IntPtr p)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_value_type(p);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_user_data, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_user_data")]
		public static global::System.IntPtr sqlite3_user_data(global::System.IntPtr context)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_user_data(context);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_result_blob, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_result_blob")]
		public static void sqlite3_result_blob(
					global::System.IntPtr context, 
					byte[] val, 
					int nSize, 
					global::System.IntPtr pvReserved)
		{
			// Setup
			byte* unsafe_val;
			// Marshalling
			fixed (byte* pinned_val = ((val != null 
						&& val.Length == 0) ? new byte[1] : val))
			{
				unsafe_val = (byte*)pinned_val;
				// Call to native method
				global::__Interop.e_sqlite3_PInvokes.sqlite3_result_blob(
									context, 
									unsafe_val, 
									nSize, 
									pvReserved
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, sqlite3_result_double, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] double__double, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_result_double")]
		public static void sqlite3_result_double(
					global::System.IntPtr context, 
					double val)
		{
			// Marshalling
			// Call to native method
			global::__Interop.e_sqlite3_PInvokes.sqlite3_result_double(
								context, 
								val
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sqlite3_result_error, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_result_error")]
		public static void sqlite3_result_error(
					global::System.IntPtr context, 
					byte[] strErr, 
					int nLen)
		{
			// Setup
			byte* unsafe_strErr;
			// Marshalling
			fixed (byte* pinned_strErr = ((strErr != null 
						&& strErr.Length == 0) ? new byte[1] : strErr))
			{
				unsafe_strErr = (byte*)pinned_strErr;
				// Call to native method
				global::__Interop.e_sqlite3_PInvokes.sqlite3_result_error(
									context, 
									unsafe_strErr, 
									nLen
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, sqlite3_result_int, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_result_int")]
		public static void sqlite3_result_int(
					global::System.IntPtr context, 
					int val)
		{
			// Marshalling
			// Call to native method
			global::__Interop.e_sqlite3_PInvokes.sqlite3_result_int(
								context, 
								val
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sqlite3_result_int64, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] long____int64, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_result_int64")]
		public static void sqlite3_result_int64(
					global::System.IntPtr context, 
					long val)
		{
			// Marshalling
			// Call to native method
			global::__Interop.e_sqlite3_PInvokes.sqlite3_result_int64(
								context, 
								val
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sqlite3_result_null, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_result_null")]
		public static void sqlite3_result_null(global::System.IntPtr context)
		{
			// Marshalling
			// Call to native method
			global::__Interop.e_sqlite3_PInvokes.sqlite3_result_null(context);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sqlite3_result_text, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_result_text")]
		public static void sqlite3_result_text(
					global::System.IntPtr context, 
					byte[] val, 
					int nLen, 
					global::System.IntPtr pvReserved)
		{
			// Setup
			byte* unsafe_val;
			// Marshalling
			fixed (byte* pinned_val = ((val != null 
						&& val.Length == 0) ? new byte[1] : val))
			{
				unsafe_val = (byte*)pinned_val;
				// Call to native method
				global::__Interop.e_sqlite3_PInvokes.sqlite3_result_text(
									context, 
									unsafe_val, 
									nLen, 
									pvReserved
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, sqlite3_result_zeroblob, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_result_zeroblob")]
		public static void sqlite3_result_zeroblob(
					global::System.IntPtr context, 
					int n)
		{
			// Marshalling
			// Call to native method
			global::__Interop.e_sqlite3_PInvokes.sqlite3_result_zeroblob(
								context, 
								n
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sqlite3_result_error_toobig, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_result_error_toobig")]
		public static void sqlite3_result_error_toobig(global::System.IntPtr context)
		{
			// Marshalling
			// Call to native method
			global::__Interop.e_sqlite3_PInvokes.sqlite3_result_error_toobig(context);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sqlite3_result_error_nomem, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_result_error_nomem")]
		public static void sqlite3_result_error_nomem(global::System.IntPtr context)
		{
			// Marshalling
			// Call to native method
			global::__Interop.e_sqlite3_PInvokes.sqlite3_result_error_nomem(context);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sqlite3_result_error_code, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_result_error_code")]
		public static void sqlite3_result_error_code(
					global::System.IntPtr context, 
					int code)
		{
			// Marshalling
			// Call to native method
			global::__Interop.e_sqlite3_PInvokes.sqlite3_result_error_code(
								context, 
								code
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, sqlite3_aggregate_context, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_aggregate_context")]
		public static global::System.IntPtr sqlite3_aggregate_context(
					global::System.IntPtr context, 
					int nBytes)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_aggregate_context(
								context, 
								nBytes
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_text16, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040DF0] string__wchar_t *, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_bind_text16")]
		public static int sqlite3_bind_text16(
					global::System.IntPtr stmt, 
					int index, 
					string val, 
					int nlen, 
					global::System.IntPtr pvReserved)
		{
			// Setup
			ushort* unsafe_val = default(ushort*);
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_val = val)
			{
				unsafe_val = (ushort*)pinned_val;
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_bind_text16(
									stmt, 
									index, 
									unsafe_val, 
									nlen, 
									pvReserved
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_result_error16, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040DF0] string__wchar_t *, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_result_error16")]
		public static void sqlite3_result_error16(
					global::System.IntPtr context, 
					string strName, 
					int nLen)
		{
			// Setup
			ushort* unsafe_strName = default(ushort*);
			// Marshalling
			fixed (char* pinned_strName = strName)
			{
				unsafe_strName = (ushort*)pinned_strName;
				// Call to native method
				global::__Interop.e_sqlite3_PInvokes.sqlite3_result_error16(
									context, 
									unsafe_strName, 
									nLen
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, sqlite3_result_text16, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040DF0] string__wchar_t *, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_result_text16")]
		public static void sqlite3_result_text16(
					global::System.IntPtr context, 
					string strName, 
					int nLen, 
					global::System.IntPtr pvReserved)
		{
			// Setup
			ushort* unsafe_strName = default(ushort*);
			// Marshalling
			fixed (char* pinned_strName = strName)
			{
				unsafe_strName = (ushort*)pinned_strName;
				// Call to native method
				global::__Interop.e_sqlite3_PInvokes.sqlite3_result_text16(
									context, 
									unsafe_strName, 
									nLen, 
									pvReserved
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, sqlite3_config_none, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_config_none")]
		public static int sqlite3_config_none(int op)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_config_none(op);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_config_int, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_config_int")]
		public static int sqlite3_config_int(
					int op, 
					int val)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_config_int(
								op, 
								val
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_config_log, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00041154] SQLitePCL_SQLite3Provider_e_sqlite3_NativeMethods_callback_log__SQLitePCLRaw_provider_e_sqlite3__SQLitePCL__SQLite3Provider_e_sqlite3_NativeMethods_callback_log__SQLitePCLRaw_provider_e_sqlite3, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_config_log")]
		public static int sqlite3_config_log(
					int op, 
					global::SQLitePCL.SQLite3Provider_e_sqlite3_NativeMethods_callback_log__SQLitePCLRaw_provider_e_sqlite3 func, 
					global::System.IntPtr pvUser)
		{
			// Setup
			void* unsafe_func = default(void*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_func = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods+callback_log,SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.1" +
											"21, Culture=neutral, PublicKeyToken=9c301db686d0bd12"), 
									func
								);
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_config_log(
									op, 
									unsafe_func, 
									pvUser
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(func);
			}
		}

		// Signature, sqlite3_create_function_v2, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041154] SQLitePCL_SQLite3Provider_e_sqlite3_NativeMethods_callback_scalar_function__SQLitePCLRaw_provider_e_sqlite3__SQLitePCL__SQLite3Provider_e_sqlite3_NativeMethods_callback_scalar_function__SQLitePCLRaw_provider_e_sqlite3, [fwd] [in] [EETypeRva:0x00041154] SQLitePCL_SQLite3Provider_e_sqlite3_NativeMethods_callback_agg_function_step__SQLitePCLRaw_provider_e_sqlite3__SQLitePCL__SQLite3Provider_e_sqlite3_NativeMethods_callback_agg_function_step__SQLitePCLRaw_provider_e_sqlite3, [fwd] [in] [EETypeRva:0x00041154] SQLitePCL_SQLite3Provider_e_sqlite3_NativeMethods_callback_agg_function_final__SQLitePCLRaw_provider_e_sqlite3__SQLitePCL__SQLite3Provider_e_sqlite3_NativeMethods_callback_agg_function_final__SQLitePCLRaw_provider_e_sqlite3, [fwd] [in] [EETypeRva:0x00041154] SQLitePCL_SQLite3Provider_e_sqlite3_NativeMethods_callback_destroy__SQLitePCLRaw_provider_e_sqlite3__SQLitePCL__SQLite3Provider_e_sqlite3_NativeMethods_callback_destroy__SQLitePCLRaw_provider_e_sqlite3, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_create_function_v2")]
		public static int sqlite3_create_function_v2(
					global::System.IntPtr db, 
					byte[] strName, 
					int nArgs, 
					int nType, 
					global::System.IntPtr pvUser, 
					global::SQLitePCL.SQLite3Provider_e_sqlite3_NativeMethods_callback_scalar_function__SQLitePCLRaw_provider_e_sqlite3 func, 
					global::SQLitePCL.SQLite3Provider_e_sqlite3_NativeMethods_callback_agg_function_step__SQLitePCLRaw_provider_e_sqlite3 fstep, 
					global::SQLitePCL.SQLite3Provider_e_sqlite3_NativeMethods_callback_agg_function_final__SQLitePCLRaw_provider_e_sqlite3 ffinal, 
					global::SQLitePCL.SQLite3Provider_e_sqlite3_NativeMethods_callback_destroy__SQLitePCLRaw_provider_e_sqlite3 fdestroy)
		{
			// Setup
			byte* unsafe_strName;
			void* unsafe_func = default(void*);
			void* unsafe_fstep = default(void*);
			void* unsafe_ffinal = default(void*);
			void* unsafe_fdestroy = default(void*);
			int unsafe___value;
			try
			{
				// Marshalling
				fixed (byte* pinned_strName = ((strName != null 
							&& strName.Length == 0) ? new byte[1] : strName))
				{
					unsafe_strName = (byte*)pinned_strName;
					unsafe_func = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
										global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods+callback_scalar_function,SQLitePCLRaw.provider.e_sqlite3, Vers" +
												"ion=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12"), 
										func
									);
					unsafe_fstep = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
										global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods+callback_agg_function_step,SQLitePCLRaw.provider.e_sqlite3, Ve" +
												"rsion=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12"), 
										fstep
									);
					unsafe_ffinal = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
										global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods+callback_agg_function_final,SQLitePCLRaw.provider.e_sqlite3, V" +
												"ersion=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12"), 
										ffinal
									);
					unsafe_fdestroy = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
										global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods+callback_destroy,SQLitePCLRaw.provider.e_sqlite3, Version=1.1." +
												"11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12"), 
										fdestroy
									);
					// Call to native method
					unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_create_function_v2(
										db, 
										unsafe_strName, 
										nArgs, 
										nType, 
										pvUser, 
										unsafe_func, 
										unsafe_fstep, 
										unsafe_ffinal, 
										unsafe_fdestroy
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(func);
				global::System.GC.KeepAlive(fstep);
				global::System.GC.KeepAlive(ffinal);
				global::System.GC.KeepAlive(fdestroy);
			}
		}

		// Signature, sqlite3_create_collation, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041154] SQLitePCL_SQLite3Provider_e_sqlite3_NativeMethods_callback_collation__SQLitePCLRaw_provider_e_sqlite3__SQLitePCL__SQLite3Provider_e_sqlite3_NativeMethods_callback_collation__SQLitePCLRaw_provider_e_sqlite3, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_create_collation")]
		public static int sqlite3_create_collation(
					global::System.IntPtr db, 
					byte[] strName, 
					int nType, 
					global::System.IntPtr pvUser, 
					global::SQLitePCL.SQLite3Provider_e_sqlite3_NativeMethods_callback_collation__SQLitePCLRaw_provider_e_sqlite3 func)
		{
			// Setup
			byte* unsafe_strName;
			void* unsafe_func = default(void*);
			int unsafe___value;
			try
			{
				// Marshalling
				fixed (byte* pinned_strName = ((strName != null 
							&& strName.Length == 0) ? new byte[1] : strName))
				{
					unsafe_strName = (byte*)pinned_strName;
					unsafe_func = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
										global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods+callback_collation,SQLitePCLRaw.provider.e_sqlite3, Version=1." +
												"1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12"), 
										func
									);
					// Call to native method
					unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_create_collation(
										db, 
										unsafe_strName, 
										nType, 
										pvUser, 
										unsafe_func
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(func);
			}
		}

		// Signature, sqlite3_update_hook, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041154] SQLitePCL_SQLite3Provider_e_sqlite3_NativeMethods_callback_update__SQLitePCLRaw_provider_e_sqlite3__SQLitePCL__SQLite3Provider_e_sqlite3_NativeMethods_callback_update__SQLitePCLRaw_provider_e_sqlite3, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_update_hook")]
		public static global::System.IntPtr sqlite3_update_hook(
					global::System.IntPtr db, 
					global::SQLitePCL.SQLite3Provider_e_sqlite3_NativeMethods_callback_update__SQLitePCLRaw_provider_e_sqlite3 func, 
					global::System.IntPtr pvUser)
		{
			// Setup
			void* unsafe_func = default(void*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_func = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods+callback_update,SQLitePCLRaw.provider.e_sqlite3, Version=1.1.1" +
											"1.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12"), 
									func
								);
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_update_hook(
									db, 
									unsafe_func, 
									pvUser
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(func);
			}
		}

		// Signature, sqlite3_commit_hook, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041154] SQLitePCL_SQLite3Provider_e_sqlite3_NativeMethods_callback_commit__SQLitePCLRaw_provider_e_sqlite3__SQLitePCL__SQLite3Provider_e_sqlite3_NativeMethods_callback_commit__SQLitePCLRaw_provider_e_sqlite3, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_commit_hook")]
		public static global::System.IntPtr sqlite3_commit_hook(
					global::System.IntPtr db, 
					global::SQLitePCL.SQLite3Provider_e_sqlite3_NativeMethods_callback_commit__SQLitePCLRaw_provider_e_sqlite3 func, 
					global::System.IntPtr pvUser)
		{
			// Setup
			void* unsafe_func = default(void*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_func = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods+callback_commit,SQLitePCLRaw.provider.e_sqlite3, Version=1.1.1" +
											"1.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12"), 
									func
								);
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_commit_hook(
									db, 
									unsafe_func, 
									pvUser
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(func);
			}
		}

		// Signature, sqlite3_profile, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041154] SQLitePCL_SQLite3Provider_e_sqlite3_NativeMethods_callback_profile__SQLitePCLRaw_provider_e_sqlite3__SQLitePCL__SQLite3Provider_e_sqlite3_NativeMethods_callback_profile__SQLitePCLRaw_provider_e_sqlite3, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_profile")]
		public static global::System.IntPtr sqlite3_profile(
					global::System.IntPtr db, 
					global::SQLitePCL.SQLite3Provider_e_sqlite3_NativeMethods_callback_profile__SQLitePCLRaw_provider_e_sqlite3 func, 
					global::System.IntPtr pvUser)
		{
			// Setup
			void* unsafe_func = default(void*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_func = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods+callback_profile,SQLitePCLRaw.provider.e_sqlite3, Version=1.1." +
											"11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12"), 
									func
								);
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_profile(
									db, 
									unsafe_func, 
									pvUser
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(func);
			}
		}

		// Signature, sqlite3_progress_handler, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00041154] SQLitePCL_SQLite3Provider_e_sqlite3_NativeMethods_callback_progress_handler__SQLitePCLRaw_provider_e_sqlite3__SQLitePCL__SQLite3Provider_e_sqlite3_NativeMethods_callback_progress_handler__SQLitePCLRaw_provider_e_sqlite3, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_progress_handler")]
		public static global::System.IntPtr sqlite3_progress_handler(
					global::System.IntPtr db, 
					int instructions, 
					global::SQLitePCL.SQLite3Provider_e_sqlite3_NativeMethods_callback_progress_handler__SQLitePCLRaw_provider_e_sqlite3 func, 
					global::System.IntPtr pvUser)
		{
			// Setup
			void* unsafe_func = default(void*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_func = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods+callback_progress_handler,SQLitePCLRaw.provider.e_sqlite3, Ver" +
											"sion=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12"), 
									func
								);
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_progress_handler(
									db, 
									instructions, 
									unsafe_func, 
									pvUser
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(func);
			}
		}

		// Signature, sqlite3_trace, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041154] SQLitePCL_SQLite3Provider_e_sqlite3_NativeMethods_callback_trace__SQLitePCLRaw_provider_e_sqlite3__SQLitePCL__SQLite3Provider_e_sqlite3_NativeMethods_callback_trace__SQLitePCLRaw_provider_e_sqlite3, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_trace")]
		public static global::System.IntPtr sqlite3_trace(
					global::System.IntPtr db, 
					global::SQLitePCL.SQLite3Provider_e_sqlite3_NativeMethods_callback_trace__SQLitePCLRaw_provider_e_sqlite3 func, 
					global::System.IntPtr pvUser)
		{
			// Setup
			void* unsafe_func = default(void*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_func = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods+callback_trace,SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11" +
											".121, Culture=neutral, PublicKeyToken=9c301db686d0bd12"), 
									func
								);
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_trace(
									db, 
									unsafe_func, 
									pvUser
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(func);
			}
		}

		// Signature, sqlite3_rollback_hook, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041154] SQLitePCL_SQLite3Provider_e_sqlite3_NativeMethods_callback_rollback__SQLitePCLRaw_provider_e_sqlite3__SQLitePCL__SQLite3Provider_e_sqlite3_NativeMethods_callback_rollback__SQLitePCLRaw_provider_e_sqlite3, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_rollback_hook")]
		public static global::System.IntPtr sqlite3_rollback_hook(
					global::System.IntPtr db, 
					global::SQLitePCL.SQLite3Provider_e_sqlite3_NativeMethods_callback_rollback__SQLitePCLRaw_provider_e_sqlite3 func, 
					global::System.IntPtr pvUser)
		{
			// Setup
			void* unsafe_func = default(void*);
			global::System.IntPtr unsafe___value;
			try
			{
				// Marshalling
				unsafe_func = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods+callback_rollback,SQLitePCLRaw.provider.e_sqlite3, Version=1.1" +
											".11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12"), 
									func
								);
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_rollback_hook(
									db, 
									unsafe_func, 
									pvUser
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(func);
			}
		}

		// Signature, sqlite3_db_handle, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_db_handle")]
		public static global::System.IntPtr sqlite3_db_handle(global::System.IntPtr stmt)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_db_handle(stmt);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_next_stmt, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_next_stmt")]
		public static global::System.IntPtr sqlite3_next_stmt(
					global::System.IntPtr db, 
					global::System.IntPtr stmt)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_next_stmt(
								db, 
								stmt
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_stmt_busy, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_stmt_busy")]
		public static int sqlite3_stmt_busy(global::System.IntPtr stmt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_stmt_busy(stmt);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_stmt_readonly, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_stmt_readonly")]
		public static int sqlite3_stmt_readonly(global::System.IntPtr stmt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_stmt_readonly(stmt);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_exec, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x00041154] SQLitePCL_SQLite3Provider_e_sqlite3_NativeMethods_callback_exec__SQLitePCLRaw_provider_e_sqlite3__SQLitePCL__SQLite3Provider_e_sqlite3_NativeMethods_callback_exec__SQLitePCLRaw_provider_e_sqlite3, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_exec")]
		public static int sqlite3_exec(
					global::System.IntPtr db, 
					byte[] strSql, 
					global::SQLitePCL.SQLite3Provider_e_sqlite3_NativeMethods_callback_exec__SQLitePCLRaw_provider_e_sqlite3 cb, 
					global::System.IntPtr pvParam, 
					out global::System.IntPtr errMsg)
		{
			// Setup
			byte* unsafe_strSql;
			void* unsafe_cb = default(void*);
			int unsafe___value;
			try
			{
				// Marshalling
				fixed (byte* pinned_strSql = ((strSql != null 
							&& strSql.Length == 0) ? new byte[1] : strSql))
				{
					unsafe_strSql = (byte*)pinned_strSql;
					unsafe_cb = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
										global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods+callback_exec,SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11." +
												"121, Culture=neutral, PublicKeyToken=9c301db686d0bd12"), 
										cb
									);
					fixed (global::System.IntPtr* pinned_errMsg = &(errMsg))
					{
						// Call to native method
						unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_exec(
											db, 
											unsafe_strSql, 
											unsafe_cb, 
											pvParam, 
											pinned_errMsg
										);
						global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					}
				}
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(cb);
			}
		}

		// Signature, sqlite3_get_autocommit, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_get_autocommit")]
		public static int sqlite3_get_autocommit(global::System.IntPtr db)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_get_autocommit(db);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_extended_result_codes, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_extended_result_codes")]
		public static int sqlite3_extended_result_codes(
					global::System.IntPtr db, 
					int onoff)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_extended_result_codes(
								db, 
								onoff
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_errcode, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_errcode")]
		public static int sqlite3_errcode(global::System.IntPtr db)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_errcode(db);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_extended_errcode, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_extended_errcode")]
		public static int sqlite3_extended_errcode(global::System.IntPtr db)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_extended_errcode(db);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_errstr, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_errstr")]
		public static global::System.IntPtr sqlite3_errstr(int rc)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_errstr(rc);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_log, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_log")]
		public static void sqlite3_log(
					int iErrCode, 
					byte[] zFormat)
		{
			// Setup
			byte* unsafe_zFormat;
			// Marshalling
			fixed (byte* pinned_zFormat = ((zFormat != null 
						&& zFormat.Length == 0) ? new byte[1] : zFormat))
			{
				unsafe_zFormat = (byte*)pinned_zFormat;
				// Call to native method
				global::__Interop.e_sqlite3_PInvokes.sqlite3_log(
									iErrCode, 
									unsafe_zFormat
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, sqlite3_file_control, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_file_control")]
		public static int sqlite3_file_control(
					global::System.IntPtr db, 
					byte[] zDbName, 
					int op, 
					global::System.IntPtr pArg)
		{
			// Setup
			byte* unsafe_zDbName;
			int unsafe___value;
			// Marshalling
			fixed (byte* pinned_zDbName = ((zDbName != null 
						&& zDbName.Length == 0) ? new byte[1] : zDbName))
			{
				unsafe_zDbName = (byte*)pinned_zDbName;
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_file_control(
									db, 
									unsafe_zDbName, 
									op, 
									pArg
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_backup_init, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_backup_init")]
		public static global::System.IntPtr sqlite3_backup_init(
					global::System.IntPtr destDb, 
					byte[] zDestName, 
					global::System.IntPtr sourceDb, 
					byte[] zSourceName)
		{
			// Setup
			byte* unsafe_zDestName;
			byte* unsafe_zSourceName;
			global::System.IntPtr unsafe___value;
			// Marshalling
			fixed (byte* pinned_zDestName = ((zDestName != null 
						&& zDestName.Length == 0) ? new byte[1] : zDestName))
			{
				unsafe_zDestName = (byte*)pinned_zDestName;
				fixed (byte* pinned_zSourceName = ((zSourceName != null 
							&& zSourceName.Length == 0) ? new byte[1] : zSourceName))
				{
					unsafe_zSourceName = (byte*)pinned_zSourceName;
					// Call to native method
					unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_backup_init(
										destDb, 
										unsafe_zDestName, 
										sourceDb, 
										unsafe_zSourceName
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
			}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_backup_step, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_backup_step")]
		public static int sqlite3_backup_step(
					global::System.IntPtr backup, 
					int nPage)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_backup_step(
								backup, 
								nPage
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_backup_finish, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_backup_finish")]
		public static int sqlite3_backup_finish(global::System.IntPtr backup)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_backup_finish(backup);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_backup_remaining, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_backup_remaining")]
		public static int sqlite3_backup_remaining(global::System.IntPtr backup)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_backup_remaining(backup);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_backup_pagecount, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_backup_pagecount")]
		public static int sqlite3_backup_pagecount(global::System.IntPtr backup)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_backup_pagecount(backup);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_blob_open, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x00040C5C] long____int64, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_blob_open")]
		public static int sqlite3_blob_open(
					global::System.IntPtr db, 
					byte[] sdb, 
					byte[] table, 
					byte[] col, 
					long rowid, 
					int flags, 
					out global::System.IntPtr blob)
		{
			// Setup
			byte* unsafe_sdb;
			byte* unsafe_table;
			byte* unsafe_col;
			int unsafe___value;
			// Marshalling
			fixed (byte* pinned_sdb = ((sdb != null 
						&& sdb.Length == 0) ? new byte[1] : sdb))
			{
				unsafe_sdb = (byte*)pinned_sdb;
				fixed (byte* pinned_table = ((table != null 
							&& table.Length == 0) ? new byte[1] : table))
				{
					unsafe_table = (byte*)pinned_table;
					fixed (byte* pinned_col = ((col != null 
								&& col.Length == 0) ? new byte[1] : col))
					{
						unsafe_col = (byte*)pinned_col;
						fixed (global::System.IntPtr* pinned_blob = &(blob))
						{
							// Call to native method
							unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_blob_open(
												db, 
												unsafe_sdb, 
												unsafe_table, 
												unsafe_col, 
												rowid, 
												flags, 
												pinned_blob
											);
							global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
						}
					}
				}
			}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_blob_write, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_blob_write")]
		public static int sqlite3_blob_write(
					global::System.IntPtr blob, 
					byte[] b, 
					int n, 
					int offset)
		{
			// Setup
			byte* unsafe_b;
			int unsafe___value;
			// Marshalling
			fixed (byte* pinned_b = ((b != null 
						&& b.Length == 0) ? new byte[1] : b))
			{
				unsafe_b = (byte*)pinned_b;
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_blob_write(
									blob, 
									unsafe_b, 
									n, 
									offset
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_blob_read, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_blob_read")]
		public static int sqlite3_blob_read(
					global::System.IntPtr blob, 
					byte[] b, 
					int n, 
					int offset)
		{
			// Setup
			byte* unsafe_b;
			int unsafe___value;
			// Marshalling
			fixed (byte* pinned_b = ((b != null 
						&& b.Length == 0) ? new byte[1] : b))
			{
				unsafe_b = (byte*)pinned_b;
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_blob_read(
									blob, 
									unsafe_b, 
									n, 
									offset
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, other_sqlite3_blob_write, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "other_sqlite3_blob_write")]
		public static int other_sqlite3_blob_write(
					global::System.IntPtr blob, 
					global::System.IntPtr b, 
					int n, 
					int offset)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.other_sqlite3_blob_write(
								blob, 
								b, 
								n, 
								offset
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, other_sqlite3_blob_read, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "other_sqlite3_blob_read")]
		public static int other_sqlite3_blob_read(
					global::System.IntPtr blob, 
					global::System.IntPtr b, 
					int n, 
					int offset)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.other_sqlite3_blob_read(
								blob, 
								b, 
								n, 
								offset
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_blob_bytes, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_blob_bytes")]
		public static int sqlite3_blob_bytes(global::System.IntPtr blob)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_blob_bytes(blob);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_blob_close, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_blob_close")]
		public static int sqlite3_blob_close(global::System.IntPtr blob)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_blob_close(blob);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_wal_autocheckpoint, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_wal_autocheckpoint")]
		public static int sqlite3_wal_autocheckpoint(
					global::System.IntPtr db, 
					int n)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_wal_autocheckpoint(
								db, 
								n
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_wal_checkpoint, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_wal_checkpoint")]
		public static int sqlite3_wal_checkpoint(
					global::System.IntPtr db, 
					byte[] dbName)
		{
			// Setup
			byte* unsafe_dbName;
			int unsafe___value;
			// Marshalling
			fixed (byte* pinned_dbName = ((dbName != null 
						&& dbName.Length == 0) ? new byte[1] : dbName))
			{
				unsafe_dbName = (byte*)pinned_dbName;
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_wal_checkpoint(
									db, 
									unsafe_dbName
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_wal_checkpoint_v2, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041CEC] rg_byte__unsigned char *, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_wal_checkpoint_v2")]
		public static int sqlite3_wal_checkpoint_v2(
					global::System.IntPtr db, 
					byte[] dbName, 
					int eMode, 
					out int logSize, 
					out int framesCheckPointed)
		{
			// Setup
			byte* unsafe_dbName;
			int unsafe___value;
			// Marshalling
			fixed (byte* pinned_dbName = ((dbName != null 
						&& dbName.Length == 0) ? new byte[1] : dbName))
			{
				unsafe_dbName = (byte*)pinned_dbName;
				fixed (int* pinned_logSize = &(logSize))
					fixed (int* pinned_framesCheckPointed = &(framesCheckPointed))
					{
						// Call to native method
						unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_wal_checkpoint_v2(
											db, 
											unsafe_dbName, 
											eMode, 
											pinned_logSize, 
											pinned_framesCheckPointed
										);
						global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					}
			}
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_set_authorizer, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00041154] SQLitePCL_SQLite3Provider_e_sqlite3_NativeMethods_callback_authorizer__SQLitePCLRaw_provider_e_sqlite3__SQLitePCL__SQLite3Provider_e_sqlite3_NativeMethods_callback_authorizer__SQLitePCLRaw_provider_e_sqlite3, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_set_authorizer")]
		public static int sqlite3_set_authorizer(
					global::System.IntPtr db, 
					global::SQLitePCL.SQLite3Provider_e_sqlite3_NativeMethods_callback_authorizer__SQLitePCLRaw_provider_e_sqlite3 cb, 
					global::System.IntPtr pvUser)
		{
			// Setup
			void* unsafe_cb = default(void*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_cb = (void*)global::System.Runtime.InteropServices.McgMarshal.GetStubForPInvokeDelegate(
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods+callback_authorizer,SQLitePCLRaw.provider.e_sqlite3, Version=1" +
											".1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12"), 
									cb
								);
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_set_authorizer(
									db, 
									unsafe_cb, 
									pvUser
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.GC.KeepAlive(cb);
			}
		}

		// Signature, sqlite3_win32_set_directory, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] uint__unsigned int, [fwd] [in] [EETypeRva:0x00040DF0] string__wchar_t *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("SQLitePCLRaw.provider.e_sqlite3, Version=1.1.11.121, Culture=neutral, PublicKeyToken=9c301db686d0bd12", "SQLitePCL.SQLite3Provider_e_sqlite3+NativeMethods", "sqlite3_win32_set_directory")]
		public static int sqlite3_win32_set_directory(
					uint directoryType, 
					string directoryPath)
		{
			// Setup
			ushort* unsafe_directoryPath = default(ushort*);
			int unsafe___value;
			// Marshalling
			fixed (char* pinned_directoryPath = directoryPath)
			{
				unsafe_directoryPath = (ushort*)pinned_directoryPath;
				// Call to native method
				unsafe___value = global::__Interop.e_sqlite3_PInvokes.sqlite3_win32_set_directory(
									directoryType, 
									unsafe_directoryPath
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module '[MRT]'
	/// </summary>
	public unsafe static partial class _MRT_
	{
		// Signature, RhpGetFuncEvalParameterBufferSize, [fwd] [return] [EETypeRva:0x00040C5C] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhpGetFuncEvalParameterBufferSize")]
		public static uint RhpGetFuncEvalParameterBufferSize()
		{
			// Setup
			uint unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop._MRT__PInvokes.RhpGetFuncEvalParameterBufferSize();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, RhpGetFuncEvalMode, [fwd] [return] [EETypeRva:0x00040C5C] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhpGetFuncEvalMode")]
		public static uint RhpGetFuncEvalMode()
		{
			// Setup
			uint unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop._MRT__PInvokes.RhpGetFuncEvalMode();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, RhpRecordDebuggeeInitiatedHandle, [fwd] [return] [EETypeRva:0x00040C5C] uint__unsigned int, [fwd] [in] [EETypeRva:0x00040C5C] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhpRecordDebuggeeInitiatedHandle")]
		public static uint RhpRecordDebuggeeInitiatedHandle(void* objectHandle)
		{
			// Setup
			uint unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop._MRT__PInvokes.RhpRecordDebuggeeInitiatedHandle(((void*)objectHandle));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, RhpVerifyDebuggerCleanup, [fwd] [return] [EETypeRva:0x00041218] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhpVerifyDebuggerCleanup")]
		public static void RhpVerifyDebuggerCleanup()
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes.RhpVerifyDebuggerCleanup();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, RhpGetCurrentThread, [fwd] [return] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhpGetCurrentThread")]
		public static global::System.IntPtr RhpGetCurrentThread()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop._MRT__PInvokes.RhpGetCurrentThread();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, RhWaitForPendingFinalizers, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhWaitForPendingFinalizers")]
		public static void RhWaitForPendingFinalizers(int allowReentrantWait)
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes.RhWaitForPendingFinalizers(allowReentrantWait);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, _RhYield, [fwd] [return] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "_RhYield")]
		public static int _RhYield()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop._MRT__PInvokes._RhYield();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, RhFlushProcessWriteBuffers, [fwd] [return] [EETypeRva:0x00041218] void__void, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhFlushProcessWriteBuffers")]
		public static void RhFlushProcessWriteBuffers()
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes.RhFlushProcessWriteBuffers();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, RhCompatibleReentrantWaitAny, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr___ptr__w64 int *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhCompatibleReentrantWaitAny")]
		public static int RhCompatibleReentrantWaitAny(
					int alertable, 
					int timeout, 
					int count, 
					global::System.IntPtr* handles)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop._MRT__PInvokes.RhCompatibleReentrantWaitAny(
								alertable, 
								timeout, 
								count, 
								((global::System.IntPtr*)handles)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, RhCallDescrWorkerNative, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhCallDescrWorkerNative")]
		public static void RhCallDescrWorkerNative(global::System.IntPtr callDescr)
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes.RhCallDescrWorkerNative(callDescr);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, _ecvt_s, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] byte___ptrunsigned char *, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] double__double, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] int___ptrint *, [fwd] [in] [EETypeRva:0x00040C5C] int___ptrint *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "_ecvt_s")]
		public static void _ecvt_s(
					byte* buffer, 
					int sizeInBytes, 
					double value, 
					int count, 
					int* dec, 
					int* sign)
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes._ecvt_s(
								((byte*)buffer), 
								sizeInBytes, 
								value, 
								count, 
								((int*)dec), 
								((int*)sign)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, memmove, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] byte___ptrunsigned char *, [fwd] [in] [EETypeRva:0x00040C5C] byte___ptrunsigned char *, [fwd] [in] [EETypeRva:0x00040C5C] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "memmove")]
		public static void memmove(
					byte* dmem, 
					byte* smem, 
					uint size)
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes.memmove(
								((byte*)dmem), 
								((byte*)smem), 
								size
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, memset, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] byte___ptrunsigned char *, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "memset")]
		public static void memset(
					byte* mem, 
					int value, 
					uint size)
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes.memset(
								((byte*)mem), 
								value, 
								size
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}
	}

	/// <summary>
	/// P/Invoke class for module '*'
	/// </summary>
	public unsafe static partial class _
	{
		// Signature, CallingConventionConverter_GetStubs, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.TypeLoader, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Internal.Runtime.TypeLoader.CallConverterThunk", "CallingConventionConverter_GetStubs")]
		public static void CallingConventionConverter_GetStubs(
					out global::System.IntPtr returnVoidStub, 
					out global::System.IntPtr returnIntegerStub, 
					out global::System.IntPtr commonStub, 
					out global::System.IntPtr returnFloatingPointReturn4Thunk, 
					out global::System.IntPtr returnFloatingPointReturn8Thunk)
		{
			// Marshalling
			fixed (global::System.IntPtr* pinned_returnVoidStub = &(returnVoidStub))
				fixed (global::System.IntPtr* pinned_returnIntegerStub = &(returnIntegerStub))
					fixed (global::System.IntPtr* pinned_commonStub = &(commonStub))
						fixed (global::System.IntPtr* pinned_returnFloatingPointReturn4Thunk = &(returnFloatingPointReturn4Thunk))
							fixed (global::System.IntPtr* pinned_returnFloatingPointReturn8Thunk = &(returnFloatingPointReturn8Thunk))
							{
								// Call to native method
								global::__Interop.__PInvokes.CallingConventionConverter_GetStubs(
													pinned_returnVoidStub, 
													pinned_returnIntegerStub, 
													pinned_commonStub, 
													pinned_returnFloatingPointReturn4Thunk, 
													pinned_returnFloatingPointReturn8Thunk
												);
								global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
							}
			// Return
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-winrt-string-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_winrt_string_l1_1_0_dll
	{
		// Signature, WindowsCreateStringReference, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] char___ptrwchar_t *, [fwd] [in] [EETypeRva:0x00040C5C] uint__unsigned int, [fwd] [in] [EETypeRva:0x00040C5C] System_Runtime_InteropServices_HSTRING_HEADER__System_Private_Interop___ptrSystem_Runtime_InteropServices__HSTRING_HEADER__System_Private_Interop *, [fwd] [in] [EETypeRva:0x00040C5C] void___ptrvoid *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "mincore", "WindowsCreateStringReference")]
		public static int WindowsCreateStringReference(
					char* sourceString, 
					uint length, 
					global::System_Runtime_InteropServices.HSTRING_HEADER__System_Private_Interop* phstringHeader, 
					void* hstring)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.api_ms_win_core_winrt_string_l1_1_0_dll_PInvokes.WindowsCreateStringReference(
								((ushort*)sourceString), 
								length, 
								((global::System_Runtime_InteropServices.HSTRING_HEADER__System_Private_Interop*)phstringHeader), 
								((void*)hstring)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-errorhandling-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_errorhandling_l1_1_0_dll
	{
		// Signature, GetLastError, [fwd] [return] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+mincore", "GetLastError")]
		public static int GetLastError()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.api_ms_win_core_errorhandling_l1_1_0_dll_PInvokes.GetLastError();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, SetLastError, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+mincore", "SetLastError")]
		public static void SetLastError(uint dwErrCode)
		{
			// Marshalling
			// Call to native method
			global::__Interop.api_ms_win_core_errorhandling_l1_1_0_dll_PInvokes.SetLastError(dwErrCode);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-winrt-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_winrt_l1_1_0_dll
	{
		// Signature, RoInitialize, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "mincore+mincore_PInvokes", "RoInitialize")]
		public static int RoInitialize(uint initType)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.api_ms_win_core_winrt_l1_1_0_dll_PInvokes.RoInitialize(initType);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-localization-l1-2-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_localization_l1_2_0_dll
	{
		// Signature, IsValidLocaleName, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] char___ptrwchar_t *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "mincore+mincore_PInvokes", "IsValidLocaleName")]
		public static int IsValidLocaleName(char* lpLocaleName)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.api_ms_win_core_localization_l1_2_0_dll_PInvokes.IsValidLocaleName(((ushort*)lpLocaleName));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}

		// Signature, ResolveLocaleName, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] char___ptrwchar_t *, [fwd] [in] [EETypeRva:0x00040C5C] char___ptrwchar_t *, [fwd] [in] [EETypeRva:0x00040C5C] int__int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "mincore+mincore_PInvokes", "ResolveLocaleName")]
		public static int ResolveLocaleName(
					char* lpNameToResolve, 
					char* lpLocaleName, 
					int cchLocaleName)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.api_ms_win_core_localization_l1_2_0_dll_PInvokes.ResolveLocaleName(
								((ushort*)lpNameToResolve), 
								((ushort*)lpLocaleName), 
								cchLocaleName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'kernel32.dll'
	/// </summary>
	public unsafe static partial class kernel32_dll
	{
		// Signature, GetCPInfoExW, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] uint__unsigned int, [fwd] [in] [EETypeRva:0x00040C5C] uint__unsigned int, [fwd] [in] [EETypeRva:0x00040C5C] __Interop_Kernel32_CPINFOEXW__System_Text_Encoding_CodePages___ptr__Interop_Kernel32_CPINFOEXW__System_Text_Encoding_CodePages *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Text.Encoding.CodePages, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+Kernel32", "GetCPInfoExW")]
		public static int GetCPInfoExW(
					uint CodePage, 
					uint dwFlags, 
					global::_.Interop_Kernel32_CPINFOEXW__System_Text_Encoding_CodePages* lpCPInfoEx)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.kernel32_dll_PInvokes.GetCPInfoExW(
								CodePage, 
								dwFlags, 
								((global::_.Interop_Kernel32_CPINFOEXW__System_Text_Encoding_CodePages*)lpCPInfoEx)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-com-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_com_l1_1_0_dll
	{
		// Signature, CoCreateInstance, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] byte___ptrunsigned char *, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, [fwd] [in] [EETypeRva:0x00040C5C] int__int, [fwd] [in] [EETypeRva:0x00040C5C] byte___ptrunsigned char *, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.StackTraceGenerator, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Internal.StackTraceGenerator.StackTraceGenerator", "CoCreateInstance")]
		public static int CoCreateInstance(
					byte* rclsid, 
					global::System.IntPtr pUnkOuter, 
					int dwClsContext, 
					byte* riid, 
					out global::System.IntPtr ppv)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			fixed (global::System.IntPtr* pinned_ppv = &(ppv))
			{
				// Call to native method
				unsafe___value = global::__Interop.api_ms_win_core_com_l1_1_0_dll_PInvokes.CoCreateInstance(
									((byte*)rclsid), 
									pUnkOuter, 
									dwClsContext, 
									((byte*)riid), 
									pinned_ppv
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'OleAut32'
	/// </summary>
	public unsafe static partial class OleAut32
	{
		// Signature, SysFreeString, [fwd] [return] [EETypeRva:0x00041218] void__void, [fwd] [in] [EETypeRva:0x00040C5C] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.StackTraceGenerator, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Internal.LightweightInterop.MarshalExtensions", "SysFreeString")]
		public static void SysFreeString(global::System.IntPtr bstr)
		{
			// Marshalling
			// Call to native method
			global::__Interop.OleAut32_PInvokes.SysFreeString(bstr);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-winrt-robuffer-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_winrt_robuffer_l1_1_0_dll
	{
		// Signature, RoGetBufferMarshaler, [fwd] [return] [EETypeRva:0x00040C5C] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x0004290C] System_Runtime_InteropServices_IMarshal__System_Runtime_WindowsRuntime__System_Runtime_InteropServices__IMarshal__System_Runtime_WindowsRuntime *, 
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Runtime.WindowsRuntime, Version=4.0.14.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "Interop+mincore", "RoGetBufferMarshaler")]
		public static int RoGetBufferMarshaler(out global::System_Runtime_InteropServices.IMarshal__System_Runtime_WindowsRuntime bufferMarshalerPtr)
		{
			// Setup
			void* unsafe_bufferMarshalerPtr = default(void*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_bufferMarshalerPtr = null;
				// Call to native method
				unsafe___value = global::__Interop.api_ms_win_core_winrt_robuffer_l1_1_0_dll_PInvokes.RoGetBufferMarshaler(&(unsafe_bufferMarshalerPtr));
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				bufferMarshalerPtr = (global::System_Runtime_InteropServices.IMarshal__System_Runtime_WindowsRuntime)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_bufferMarshalerPtr), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.IMarshal,System.Runtime.WindowsRuntime, Version=4.0.14.0, Culture=neutral, Public" +
											"KeyToken=b77a5c561934e089")
								);
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bufferMarshalerPtr)));
			}
		}
	}

	public unsafe static partial class e_sqlite3_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_close(global::System.IntPtr db);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_close_v2(global::System.IntPtr db);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_enable_shared_cache(int enable);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sqlite3_interrupt(global::System.IntPtr db);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_finalize(global::System.IntPtr stmt);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_reset(global::System.IntPtr stmt);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_clear_bindings(global::System.IntPtr stmt);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_stmt_status(
					global::System.IntPtr stm, 
					int op, 
					int resetFlg);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_bind_parameter_name(
					global::System.IntPtr stmt, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_column_database_name(
					global::System.IntPtr stmt, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_column_database_name16(
					global::System.IntPtr stmt, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_column_decltype(
					global::System.IntPtr stmt, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_column_decltype16(
					global::System.IntPtr stmt, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_column_name(
					global::System.IntPtr stmt, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_column_name16(
					global::System.IntPtr stmt, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_column_origin_name(
					global::System.IntPtr stmt, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_column_origin_name16(
					global::System.IntPtr stmt, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_column_table_name(
					global::System.IntPtr stmt, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_column_table_name16(
					global::System.IntPtr stmt, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_column_text(
					global::System.IntPtr stmt, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_column_text16(
					global::System.IntPtr stmt, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_errmsg(global::System.IntPtr db);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_db_readonly(
					global::System.IntPtr db, 
					byte* dbName);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_db_filename(
					global::System.IntPtr db, 
					byte* att);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_prepare(
					global::System.IntPtr db, 
					global::System.IntPtr pSql, 
					int nBytes, 
					global::System.IntPtr* stmt, 
					global::System.IntPtr* ptrRemain);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_prepare_v2(
					global::System.IntPtr db, 
					global::System.IntPtr pSql, 
					int nBytes, 
					global::System.IntPtr* stmt, 
					global::System.IntPtr* ptrRemain);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_db_status(
					global::System.IntPtr db, 
					int op, 
					int* current, 
					int* highest, 
					int resetFlg);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_complete(byte* pSql);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_compileoption_used(byte* pSql);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_compileoption_get(int n);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_table_column_metadata(
					global::System.IntPtr db, 
					byte* dbName, 
					byte* tblName, 
					byte* colName, 
					global::System.IntPtr* ptrDataType, 
					global::System.IntPtr* ptrCollSeq, 
					int* notNull, 
					int* primaryKey, 
					int* autoInc);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_value_text(global::System.IntPtr p);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_value_text16(global::System.IntPtr p);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_enable_load_extension(
					global::System.IntPtr db, 
					int enable);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_load_extension(
					global::System.IntPtr db, 
					byte* fileName, 
					byte* procName, 
					global::System.IntPtr* pError);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_initialize();

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_shutdown();

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_libversion();

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_libversion_number();

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_threadsafe();

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_sourceid();

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_malloc(int n);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_realloc(
					global::System.IntPtr p, 
					int n);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sqlite3_free(global::System.IntPtr p);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_open(
					byte* filename, 
					global::System.IntPtr* db);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_open_v2(
					byte* filename, 
					global::System.IntPtr* db, 
					int flags, 
					byte* vfs);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_vfs_find(byte* vfs);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_open16(
					ushort* fileName, 
					global::System.IntPtr* db);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static long sqlite3_last_insert_rowid(global::System.IntPtr db);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_changes(global::System.IntPtr db);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_total_changes(global::System.IntPtr db);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static long sqlite3_memory_used();

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static long sqlite3_memory_highwater(int resetFlag);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_status(
					int op, 
					int* current, 
					int* highwater, 
					int resetFlag);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_busy_timeout(
					global::System.IntPtr db, 
					int ms);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_bind_blob(
					global::System.IntPtr stmt, 
					int index, 
					byte* val, 
					int nSize, 
					global::System.IntPtr nTransient);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_bind_zeroblob(
					global::System.IntPtr stmt, 
					int index, 
					int size);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_bind_double(
					global::System.IntPtr stmt, 
					int index, 
					double val);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_bind_int(
					global::System.IntPtr stmt, 
					int index, 
					int val);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_bind_int64(
					global::System.IntPtr stmt, 
					int index, 
					long val);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_bind_null(
					global::System.IntPtr stmt, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_bind_text(
					global::System.IntPtr stmt, 
					int index, 
					byte* val, 
					int nlen, 
					global::System.IntPtr pvReserved);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_bind_parameter_count(global::System.IntPtr stmt);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_bind_parameter_index(
					global::System.IntPtr stmt, 
					byte* strName);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_column_count(global::System.IntPtr stmt);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_data_count(global::System.IntPtr stmt);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_step(global::System.IntPtr stmt);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_sql(global::System.IntPtr stmt);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static double sqlite3_column_double(
					global::System.IntPtr stmt, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_column_int(
					global::System.IntPtr stmt, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static long sqlite3_column_int64(
					global::System.IntPtr stmt, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_column_blob(
					global::System.IntPtr stmt, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_column_bytes(
					global::System.IntPtr stmt, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_column_type(
					global::System.IntPtr stmt, 
					int index);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_aggregate_count(global::System.IntPtr context);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_value_blob(global::System.IntPtr p);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_value_bytes(global::System.IntPtr p);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static double sqlite3_value_double(global::System.IntPtr p);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_value_int(global::System.IntPtr p);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static long sqlite3_value_int64(global::System.IntPtr p);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_value_type(global::System.IntPtr p);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_user_data(global::System.IntPtr context);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sqlite3_result_blob(
					global::System.IntPtr context, 
					byte* val, 
					int nSize, 
					global::System.IntPtr pvReserved);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sqlite3_result_double(
					global::System.IntPtr context, 
					double val);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sqlite3_result_error(
					global::System.IntPtr context, 
					byte* strErr, 
					int nLen);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sqlite3_result_int(
					global::System.IntPtr context, 
					int val);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sqlite3_result_int64(
					global::System.IntPtr context, 
					long val);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sqlite3_result_null(global::System.IntPtr context);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sqlite3_result_text(
					global::System.IntPtr context, 
					byte* val, 
					int nLen, 
					global::System.IntPtr pvReserved);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sqlite3_result_zeroblob(
					global::System.IntPtr context, 
					int n);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sqlite3_result_error_toobig(global::System.IntPtr context);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sqlite3_result_error_nomem(global::System.IntPtr context);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sqlite3_result_error_code(
					global::System.IntPtr context, 
					int code);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_aggregate_context(
					global::System.IntPtr context, 
					int nBytes);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_bind_text16(
					global::System.IntPtr stmt, 
					int index, 
					ushort* val, 
					int nlen, 
					global::System.IntPtr pvReserved);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sqlite3_result_error16(
					global::System.IntPtr context, 
					ushort* strName, 
					int nLen);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sqlite3_result_text16(
					global::System.IntPtr context, 
					ushort* strName, 
					int nLen, 
					global::System.IntPtr pvReserved);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", EntryPoint="sqlite3_config", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_config_none(int op);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", EntryPoint="sqlite3_config", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_config_int(
					int op, 
					int val);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", EntryPoint="sqlite3_config", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_config_log(
					int op, 
					void* func, 
					global::System.IntPtr pvUser);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_create_function_v2(
					global::System.IntPtr db, 
					byte* strName, 
					int nArgs, 
					int nType, 
					global::System.IntPtr pvUser, 
					void* func, 
					void* fstep, 
					void* ffinal, 
					void* fdestroy);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_create_collation(
					global::System.IntPtr db, 
					byte* strName, 
					int nType, 
					global::System.IntPtr pvUser, 
					void* func);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_update_hook(
					global::System.IntPtr db, 
					void* func, 
					global::System.IntPtr pvUser);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_commit_hook(
					global::System.IntPtr db, 
					void* func, 
					global::System.IntPtr pvUser);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_profile(
					global::System.IntPtr db, 
					void* func, 
					global::System.IntPtr pvUser);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_progress_handler(
					global::System.IntPtr db, 
					int instructions, 
					void* func, 
					global::System.IntPtr pvUser);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_trace(
					global::System.IntPtr db, 
					void* func, 
					global::System.IntPtr pvUser);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_rollback_hook(
					global::System.IntPtr db, 
					void* func, 
					global::System.IntPtr pvUser);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_db_handle(global::System.IntPtr stmt);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_next_stmt(
					global::System.IntPtr db, 
					global::System.IntPtr stmt);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_stmt_busy(global::System.IntPtr stmt);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_stmt_readonly(global::System.IntPtr stmt);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_exec(
					global::System.IntPtr db, 
					byte* strSql, 
					void* cb, 
					global::System.IntPtr pvParam, 
					global::System.IntPtr* errMsg);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_get_autocommit(global::System.IntPtr db);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_extended_result_codes(
					global::System.IntPtr db, 
					int onoff);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_errcode(global::System.IntPtr db);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_extended_errcode(global::System.IntPtr db);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_errstr(int rc);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void sqlite3_log(
					int iErrCode, 
					byte* zFormat);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_file_control(
					global::System.IntPtr db, 
					byte* zDbName, 
					int op, 
					global::System.IntPtr pArg);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_backup_init(
					global::System.IntPtr destDb, 
					byte* zDestName, 
					global::System.IntPtr sourceDb, 
					byte* zSourceName);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_backup_step(
					global::System.IntPtr backup, 
					int nPage);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_backup_finish(global::System.IntPtr backup);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_backup_remaining(global::System.IntPtr backup);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_backup_pagecount(global::System.IntPtr backup);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_blob_open(
					global::System.IntPtr db, 
					byte* sdb, 
					byte* table, 
					byte* col, 
					long rowid, 
					int flags, 
					global::System.IntPtr* blob);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_blob_write(
					global::System.IntPtr blob, 
					byte* b, 
					int n, 
					int offset);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_blob_read(
					global::System.IntPtr blob, 
					byte* b, 
					int n, 
					int offset);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", EntryPoint="sqlite3_blob_write", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int other_sqlite3_blob_write(
					global::System.IntPtr blob, 
					global::System.IntPtr b, 
					int n, 
					int offset);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", EntryPoint="sqlite3_blob_read", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int other_sqlite3_blob_read(
					global::System.IntPtr blob, 
					global::System.IntPtr b, 
					int n, 
					int offset);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_blob_bytes(global::System.IntPtr blob);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_blob_close(global::System.IntPtr blob);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_wal_autocheckpoint(
					global::System.IntPtr db, 
					int n);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_wal_checkpoint(
					global::System.IntPtr db, 
					byte* dbName);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_wal_checkpoint_v2(
					global::System.IntPtr db, 
					byte* dbName, 
					int eMode, 
					int* logSize, 
					int* framesCheckPointed);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_set_authorizer(
					global::System.IntPtr db, 
					void* cb, 
					global::System.IntPtr pvUser);

		[global::System.Runtime.InteropServices.DllImport("e_sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_win32_set_directory(
					uint directoryType, 
					ushort* directoryPath);
	}

	public unsafe static partial class _MRT__PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static uint RhpGetFuncEvalParameterBufferSize();

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static uint RhpGetFuncEvalMode();

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static uint RhpRecordDebuggeeInitiatedHandle(void* objectHandle);

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void RhpVerifyDebuggerCleanup();

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr RhpGetCurrentThread();

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void RhWaitForPendingFinalizers(int allowReentrantWait);

		[global::System.Runtime.InteropServices.DllImport("[MRT]", EntryPoint="RhYield", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int _RhYield();

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static void RhFlushProcessWriteBuffers();

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int RhCompatibleReentrantWaitAny(
					int alertable, 
					int timeout, 
					int count, 
					global::System.IntPtr* handles);

		[global::System.Runtime.InteropServices.DllImport("[MRT]", EntryPoint="RhCallDescrWorker", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void RhCallDescrWorkerNative(global::System.IntPtr callDescr);

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void _ecvt_s(
					byte* buffer, 
					int sizeInBytes, 
					double value, 
					int count, 
					int* dec, 
					int* sign);

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void memmove(
					byte* dmem, 
					byte* smem, 
					uint size);

		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void memset(
					byte* mem, 
					int value, 
					uint size);
	}

	public unsafe static partial class __PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("*", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void CallingConventionConverter_GetStubs(
					global::System.IntPtr* returnVoidStub, 
					global::System.IntPtr* returnIntegerStub, 
					global::System.IntPtr* commonStub, 
					global::System.IntPtr* returnFloatingPointReturn4Thunk, 
					global::System.IntPtr* returnFloatingPointReturn8Thunk);
	}

	public unsafe static partial class api_ms_win_core_winrt_string_l1_1_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-winrt-string-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int WindowsCreateStringReference(
					ushort* sourceString, 
					uint length, 
					global::System_Runtime_InteropServices.HSTRING_HEADER__System_Private_Interop* phstringHeader, 
					void* hstring);
	}

	public unsafe static partial class api_ms_win_core_errorhandling_l1_1_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-errorhandling-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int GetLastError();

		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-errorhandling-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void SetLastError(uint dwErrCode);
	}

	public unsafe static partial class api_ms_win_core_winrt_l1_1_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-winrt-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int RoInitialize(uint initType);
	}

	public unsafe static partial class api_ms_win_core_localization_l1_2_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-localization-l1-2-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int IsValidLocaleName(ushort* lpLocaleName);

		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-localization-l1-2-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int ResolveLocaleName(
					ushort* lpNameToResolve, 
					ushort* lpLocaleName, 
					int cchLocaleName);
	}

	public unsafe static partial class kernel32_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int GetCPInfoExW(
					uint CodePage, 
					uint dwFlags, 
					global::_.Interop_Kernel32_CPINFOEXW__System_Text_Encoding_CodePages* lpCPInfoEx);
	}

	public unsafe static partial class api_ms_win_core_com_l1_1_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-com-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int CoCreateInstance(
					byte* rclsid, 
					global::System.IntPtr pUnkOuter, 
					int dwClsContext, 
					byte* riid, 
					global::System.IntPtr* ppv);
	}

	public unsafe static partial class OleAut32_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("OleAut32", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void SysFreeString(global::System.IntPtr bstr);
	}

	public unsafe static partial class api_ms_win_core_winrt_robuffer_l1_1_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-winrt-robuffer-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int RoGetBufferMarshaler(void** bufferMarshalerPtr);
	}
}

